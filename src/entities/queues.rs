//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.5

use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq, Serialize, Deserialize)]
#[sea_orm(table_name = "queues")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    pub title: String,
    pub chat_id: String,
    pub message_id: String,
    pub is_mixed: Option<bool>,
    pub is_priority: bool,
    pub is_deleted: bool,
    pub created_at: DateTime,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::queue_users::Entity")]
    QueueUsers,
}

impl Related<super::queue_users::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::QueueUsers.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
